// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SpaceshipManager.Database;

namespace SpaceshipManager.Migrations
{
    [DbContext(typeof(ManagerContext))]
    [Migration("20211020004818_CreateDatabase")]
    partial class CreateDatabase
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.11");

            modelBuilder.Entity("SpaceshipManager.Models.EspacoNave", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<decimal>("Carga")
                        .HasColumnType("DECIMAL(18,4)")
                        .HasColumnName("carga");

                    b.Property<string>("Classe")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("classe");

                    b.Property<string>("Modelo")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("modelo");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("nome");

                    b.Property<int>("Passageiros")
                        .HasColumnType("int")
                        .HasColumnName("passageiros");

                    b.HasKey("Id");

                    b.HasIndex("Nome")
                        .HasAnnotation("MySql:IndexPrefixLength", new[] { 4 });

                    b.ToTable("espaco_naves");
                });

            modelBuilder.Entity("SpaceshipManager.Models.HistoricoViagem", b =>
                {
                    b.Property<int>("IdPiloto")
                        .HasColumnType("int")
                        .HasColumnName("piloto");

                    b.Property<int>("IdEspacoNave")
                        .HasColumnType("int")
                        .HasColumnName("espaco_nave");

                    b.Property<DateTime?>("DataChegada")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("data_chegada");

                    b.Property<DateTime>("DataSaida")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("data_saida");

                    b.HasKey("IdPiloto", "IdEspacoNave");

                    b.HasIndex("IdEspacoNave");

                    b.ToTable("historico_viagens");
                });

            modelBuilder.Entity("SpaceshipManager.Models.Piloto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("AnoNascimento")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("ano_nascimento");

                    b.Property<int>("IdPlaneta")
                        .HasColumnType("int")
                        .HasColumnName("planeta");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("nome");

                    b.HasKey("Id");

                    b.HasIndex("IdPlaneta");

                    b.HasIndex("Nome")
                        .HasAnnotation("MySql:IndexPrefixLength", new[] { 4 });

                    b.ToTable("pilotos");
                });

            modelBuilder.Entity("SpaceshipManager.Models.Planeta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("Clima")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("clima");

                    b.Property<decimal>("Diametro")
                        .HasColumnType("DECIMAL(18,4)")
                        .HasColumnName("diametro");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("nome");

                    b.Property<decimal>("Orbita")
                        .HasColumnType("DECIMAL(18,4)")
                        .HasColumnName("orbita");

                    b.Property<int>("Populacao")
                        .HasColumnType("int")
                        .HasColumnName("populacao");

                    b.Property<decimal>("Rotacao")
                        .HasColumnType("DECIMAL(18,4)")
                        .HasColumnName("rotacao");

                    b.HasKey("Id");

                    b.HasIndex("Nome")
                        .HasAnnotation("MySql:IndexPrefixLength", new[] { 4 });

                    b.ToTable("planetas");
                });

            modelBuilder.Entity("SpaceshipManager.Models.HistoricoViagem", b =>
                {
                    b.HasOne("SpaceshipManager.Models.EspacoNave", "EspacoNave")
                        .WithMany("ListaHistoricoViagem")
                        .HasForeignKey("IdEspacoNave")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SpaceshipManager.Models.Piloto", "Piloto")
                        .WithMany("ListaHistoricoViagem")
                        .HasForeignKey("IdPiloto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EspacoNave");

                    b.Navigation("Piloto");
                });

            modelBuilder.Entity("SpaceshipManager.Models.Piloto", b =>
                {
                    b.HasOne("SpaceshipManager.Models.Planeta", "Planeta")
                        .WithMany("ListaPilotos")
                        .HasForeignKey("IdPlaneta")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Planeta");
                });

            modelBuilder.Entity("SpaceshipManager.Models.EspacoNave", b =>
                {
                    b.Navigation("ListaHistoricoViagem");
                });

            modelBuilder.Entity("SpaceshipManager.Models.Piloto", b =>
                {
                    b.Navigation("ListaHistoricoViagem");
                });

            modelBuilder.Entity("SpaceshipManager.Models.Planeta", b =>
                {
                    b.Navigation("ListaPilotos");
                });
#pragma warning restore 612, 618
        }
    }
}
